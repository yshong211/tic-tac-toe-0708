{"version":3,"sources":["components/square/square.jsx","components/board/board.jsx","components/game/game.jsx","components/getDim/getDim.jsx","index.jsx"],"names":["Square","props","className","onClick","value","Board","i","this","squares","start","end","rows","push","renderSquare","board_r","new_r","new_end","parseInt","create_rq","create_row","React","Component","Game","state","board","history","stepNumber","xIsNext","row_length","count","x","o","index","board_rows","j","hor","vert","cross","hist","calculateWinner","setState","length","step","pop","status","winner","moves","map","move","desc","key","jumpTo","handleClick","GetDim","winning","handleInputChange","bind","event","target","name","how","type","onChange","how_many","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3a1c064.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n","import React from \"react\";\nimport Square from \"../square/square\";\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)} \n      />\n    );\n  }\n  create_rq(start, end) {\n    let rows = [];\n    for (let i = start; i < end; i++) {\n      rows.push(this.renderSquare(i));\n    }\n    return rows;\n  }\n  create_row(start) {\n    let board_r = [];\n    for (let i = 0; i < start; i++) {\n      let new_r = i * start;\n      let new_end = parseInt(new_r) + parseInt(start);\n      board_r.push(\n        <div className=\"board-row\">{this.create_rq(new_r, new_end)}</div>\n      );\n    }\n    return board_r;\n  }\n  render() {\n    return <div>{this.create_row(this.props.rows)}</div>;\n  }\n}\n","import React from \"react\";\nimport Board from \"../board/board\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [], \n      history: [], // track the last index\n      stepNumber: 0, // count var\n      xIsNext: true, \n    };\n  }\n/*\n  check(o, x, row) {\n    if (o === row) {\n      return \"O\";\n    }\n    if (x === row) {\n      return \"X\";\n    }\n  }\n*/\n  hor(squares, row_length, count, x, o) {\n    let index = 0;\n    for (let i = 0; i < this.props.board_rows; i++) {\n      for (let j = 0; j < this.props.board_rows; j++) {\n        if (squares[index] === \"X\") {\n          x++;\n          o = 0;\n          count++;\n        } else if (squares[index] === \"O\") {\n          o++;\n          x = 0;\n          count++;\n        } else {\n          count = 0;\n        }\n        index++;\n        if (o >= row_length && count >= row_length) {\n          return \"O\";\n        }\n        if (x >= row_length && count >= row_length) {\n          return \"X\";\n        }\n      }\n      x = 0;\n      o = 0;\n    }\n  }\n\n  vert(squares, row_length, count, x, o) {\n    for (let i = 0; i < this.props.board_rows; i++) {\n      for (\n        let j = i;\n        j < this.props.board_rows ** 2;\n        j += this.props.board_rows\n      ) {\n        if (squares[j] === \"X\") {\n          x++;\n          o = 0;\n          count++;\n        } else if (squares[j] === \"O\") {\n          o++;\n          x = 0;\n          count++;\n        } else {\n          count = 0;\n        }\n        if (o >= row_length && count >= row_length) {\n          return \"O\";\n        }\n        if (x >= row_length && count >= row_length) {\n          return \"X\";\n        }\n      }\n      x = 0;\n      o = 0;\n    }\n  }\n\n  cross(squares, row_length, count, x, o) {\n    for (let i = 0; i < row_length ** 2; i += row_length + 1) {\n      if (squares[i] === \"X\") {\n        x++;\n      }\n      if (squares[i] === \"O\") {\n        o++;\n      }\n      count++;\n    }\n    if (o === row_length) {\n      return \"O\";\n    }\n    if (x === row_length) {\n      return \"X\";\n    }\n    o=0;\n    x=0;\n\n    for (let j = row_length - 1; j < row_length ** 2 - 1; j += row_length - 1) {\n      if (squares[j] === \"X\") {\n        x++;\n      }\n      if (squares[j] === \"O\") {\n        o++;\n      }\n      count++;\n    }\n    if (o === row_length) {\n      return \"O\";\n    }\n    if (x === row_length) {\n      return \"X\";\n    }\n    o=0;\n    x=0;\n  }\n\n  calculateWinner(squares, rows) {\n    let count = 0;\n    let x = 0;\n    let o = 0;\n    if (\n      this.hor(squares, rows, count, x, o) === \"O\" ||\n      this.hor(squares, rows, count, x, o) === \"X\"\n    ) {\n      return this.hor(squares, rows, count, x, o);\n    } else if (\n      this.vert(squares, rows, count, x, o) === \"O\" ||\n      this.vert(squares, rows, count, x, o) === \"X\"\n    ) {\n      return this.vert(squares, rows, count, x, o);\n    } else if (\n      this.cross(squares, rows, count, x, o) === \"O\" ||\n      this.cross(squares, rows, count, x, o) === \"X\"\n    ) {\n      return this.cross(squares, rows, count, x, o);\n    }\n\n    return null;\n  }\n  handleClick(i) {\n    const hist = this.state.history;\n    const squares = this.state.board;\n    const rows = this.props.rows;\n    if (this.calculateWinner(squares, rows) || squares[i]) {\n      // ends the game\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    hist.push(i);\n    this.setState({\n      board: squares,\n      history: hist,\n      stepNumber: this.state.history.length,\n      xIsNext: !this.state.xIsNext, // changes turn\n    });\n  }\n\n  jumpTo(history, board, step) {\n    for (let i = history.length - 1; i >= step; i--) {\n      board[history.pop()] = null;\n    }\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n  render() {\n    const board = this.state.board;\n    const history = this.state.history;\n    const rows = this.props.rows;\n    const winner = this.calculateWinner(board, rows);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Refresh\";\n\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(history, board, move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    winner\n      ? (status = \"Winner: \" + winner)\n      : (status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\"));\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            rows={this.props.board_rows}\n            squares={board}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"../game/game\";\n\nexport default class GetDim extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { rows: 3, winning: 3 };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  handleInputChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  how_many(rows) {\n    let how = [];\n    for (let i = 3; i <= rows; i++) {\n      how.push(<option value={i}>{i}</option>);\n    }\n    return how;\n  }\n\n  render() {\n    return (\n      <div className=\"submission\">\n        <form>\n          <label>\n            Board Size<br></br>\n            <input\n              name=\"rows\"\n              type=\"int\"\n              value={this.state.rows}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <br />\n          <label>\n            <select\n              name=\"winning\"\n              value={this.state.winning}\n              onChange={this.handleInputChange}\n            >\n              {this.how_many(this.state.rows)}\n            </select>\n          </label>\n        </form>\n        <Game\n          rows={parseInt(this.state.winning)}\n          board_rows={parseInt(this.state.rows)}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GetDim from \"./components/getDim/getDim\";\n\n// ========================================\n\n// renders the game component to element\n\nReactDOM.render(\n  <GetDim />, \n  document.getElementById(\"root\") \n);\n"],"sourceRoot":""}